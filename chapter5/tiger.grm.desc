
state 0:

	program : . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 2
	program	goto 41
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 1)
	exp : lvalue . ASSIGN exp 

	ASSIGN	shift 9


	.	reduce by rule 1


state 2:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 13
	MINUS	shift 12
	TIMES	shift 11
	DIVIDE	shift 10


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 4:

	exp : LET . declist IN seqexp END 

	VAR	shift 17
	TYPE	shift 16

	dec	goto 15
	declist	goto 14

	.	error


state 5:

	exp : MINUS . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 18
	lvalue	goto 1

	.	error


state 6:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 7:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 8:

	lvalue : ID .  (reduce by rule 16)



	.	reduce by rule 16


state 9:

	exp : lvalue ASSIGN . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 19
	lvalue	goto 1

	.	error


state 10:

	exp : exp DIVIDE . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 20
	lvalue	goto 1

	.	error


state 11:

	exp : exp TIMES . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 21
	lvalue	goto 1

	.	error


state 12:

	exp : exp MINUS . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 22
	lvalue	goto 1

	.	error


state 13:

	exp : exp PLUS . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 23
	lvalue	goto 1

	.	error


state 14:

	exp : LET declist . IN seqexp END 

	IN	shift 24


	.	error


state 15:

	declist : dec .  (reduce by rule 19)
	declist : dec . declist 

	VAR	shift 17
	TYPE	shift 16

	dec	goto 15
	declist	goto 25

	.	reduce by rule 19


state 16:

	dec : TYPE . ID EQ ID 

	ID	shift 26


	.	error


state 17:

	dec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 27


	.	error


state 18:

	exp : MINUS exp .  (reduce by rule 2)
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 2


state 19:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 11)

	PLUS	shift 13
	MINUS	shift 12
	TIMES	shift 11
	DIVIDE	shift 10


	.	reduce by rule 11


state 20:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 9)



	.	reduce by rule 9


state 21:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 8)
	exp : exp . DIVIDE exp 



	.	reduce by rule 8


state 22:

	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 6)
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 

	TIMES	shift 11
	DIVIDE	shift 10


	.	reduce by rule 6


state 23:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 7)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 

	TIMES	shift 11
	DIVIDE	shift 10


	.	reduce by rule 7


state 24:

	exp : LET declist IN . seqexp END 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 29
	seqexp	goto 28
	lvalue	goto 1

	.	reduce by rule 12


state 25:

	declist : dec declist .  (reduce by rule 20)



	.	reduce by rule 20


state 26:

	dec : TYPE ID . EQ ID 

	EQ	shift 30


	.	error


state 27:

	dec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 31


	.	error


state 28:

	exp : LET declist IN seqexp . END 

	END	shift 32


	.	error


state 29:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	seqexp : exp . seqList 

	SEMICOLON	shift 34
	PLUS	shift 13
	MINUS	shift 12
	TIMES	shift 11
	DIVIDE	shift 10

	seqList	goto 33

	.	reduce by rule 14


state 30:

	dec : TYPE ID EQ . ID 

	ID	shift 35


	.	error


state 31:

	dec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 36


	.	error


state 32:

	exp : LET declist IN seqexp END .  (reduce by rule 10)



	.	reduce by rule 10


state 33:

	seqexp : exp seqList .  (reduce by rule 13)



	.	reduce by rule 13


state 34:

	seqList : SEMICOLON . exp seqList 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 37
	lvalue	goto 1

	.	error


state 35:

	dec : TYPE ID EQ ID .  (reduce by rule 18)



	.	reduce by rule 18


state 36:

	dec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 38


	.	error


state 37:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	seqList : SEMICOLON exp . seqList 

	SEMICOLON	shift 34
	PLUS	shift 13
	MINUS	shift 12
	TIMES	shift 11
	DIVIDE	shift 10

	seqList	goto 39

	.	reduce by rule 14


state 38:

	dec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 8
	INT	shift 7
	STRING	shift 6
	MINUS	shift 5
	LET	shift 4
	NIL	shift 3

	exp	goto 40
	lvalue	goto 1

	.	error


state 39:

	seqList : SEMICOLON exp seqList .  (reduce by rule 15)



	.	reduce by rule 15


state 40:

	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	dec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 17)

	PLUS	shift 13
	MINUS	shift 12
	TIMES	shift 11
	DIVIDE	shift 10


	.	reduce by rule 17


state 41:


	EOF	accept


	.	error

48 of 143 action table entries left after compaction
28 goto table entries
