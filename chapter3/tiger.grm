%%
%term ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE | EOF

%nonterm  exp | program | explist | lvalue | binop | expseq | declist | dec | typefields | typefield

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%left PLUS MINUS
%left TIMES DIVIDE

%%

program	: exp()

exp : lvalue ()
    | NIL ()
    | INT ()
    | STRING ()
    | exp binop exp ()
    | lvalue ASSIGN exp ()
    | ID LPAREN explist RPAREN ()
    | LPAREN expseq RPAREN ()
    | LET declist IN expseq END ()

lvalue: ID () 

binop: PLUS ()
    | MINUS ()
    | TIMES ()
    | DIVIDE ()
    | EQ ()
    | NEQ ()
    | LT ()
    | LE ()
    | GT ()
    | GE ()
    | AND ()
    | OR ()

declist: dec ()
    | dec declist ()

dec: TYPE ID EQ ID ()
    | VAR ID COLON ID ASSIGN exp ()
    | FUNCTION ID LPAREN typefields RPAREN COLON ID EQ exp ()

expseq: exp ()
    | expseq SEMICOLON exp ()

explist: exp()
    | explist COMMA exp ()

typefields: typefield ()
    | typefield COMMA typefields ()

typefield: ID COLON ID ()
